<?xml version="1.0" encoding="UTF-8"?>

<!--
	cfhttp
		url = "server_URL"
		port = "port_number"
		method = "method_name"
		proxyServer = "hostname"
		proxyPort = "port_number"
		proxyUser = "username"
		proxyPassword = "password"
		username = "username"
		password = "password"
		userAgent = "user_agent"
		charset = "character encoding"
		resolveURL = "boolean"
		throwOnError = "yes" or no"
		redirect = "boolean"
		timeout = "timeout_period"
		getasbinary = "boolean"
		multipart = "boolean"
		path = "path"
		file = "filename"
		name = "queryname"
		columns = "query_columns"
		firstrowasheaders = "boolean"
		delimiter = "character"
		textQualifier = "character"
	   [cfhttpparam tags - optional for some methods]
   /cfhttp
-->
<tag xmlns="http://www.cfeclipse.org/version1/dictionary"
	name="cfhttp" single="false" xmlstyle="false" hybrid="true">
	<help><![CDATA[
		Generates an HTTP request and handles the response from the
		server.
	]]></help>
	<return type="cfhttp" name="cfhttp" />
	<parameter name="URL" type="URL" required="true">
		<help><![CDATA[
			Address of the resource on the server which will handle
			the request. The URL must include the hostname or IP
			address.

			If you do not specify the transaction protocol (http:// or
			https://), CFML defaults to http.

			If you specify a port number in this attribute, it
			overrides any port attribute value.

			The cfhttppparam tag URL attribute appends query string
			attribute-value pairs to the URL.
		]]></help>
		<values />
	</parameter>
	<parameter name="port" type="Numeric" required="false">
		<help><![CDATA[
			Port number on the server to which to send the request.
			A port value in the url attribute overrides this value.
			(default: http 80 - https 443)
		]]></help>
		<values default="80" />
	</parameter>
	<parameter name="method" type="String" required="false">
		<help><![CDATA[
			* GET Requests information from the server. Any data that
			  the server requires to identify the requested
			  information must be in the URL or in cfhttp type="URL"
			  tags.
			* POST Sends information to the server for processing.
			  Requires one or more cfhttpparam tags. Often used for
			  submitting form-like data.
			* PUT Requests the server to store the message body at the
			  specified URL. Use this method to send files to the
			  server.
			* DELETE Requests the server to delete the specified URL.
			* HEAD Identical to the GET method, but the server does
			  not send a message body in the response. Use this
			  method for testing hypertext links for validity and
			  accessibility, determining the type or modification
			  time of a document, or determining the type of server.
			* TRACE Requests that the server echo the received HTTP
			  headers back to the sender in the response body. Trace
			  requests cannot have bodies. This method enables the
			  CFML application to see what is being received
			  at the server, and use that data for testing or
			  diagnostic information.
			* OPTIONS A request for information about the
			  communication options available for the server or the
			  specified URL. This method enables the CFML
			  application to determine the options and requirements
			  associated with a URL, or the capabilities of a server,
			  without requesting any additional activity by the
			  server.
		]]></help>
		<values default="get">
			<value option="get" />
			<value option="post" />
			<value option="put" />
			<value option="delete" />
			<value option="head" />
			<value option="trace" />
			<value option="options" />
		</values>
	</parameter>
	<parameter name="proxyserver" type="String" required="false">
		<help><![CDATA[
			The proxy server required to access the URL.
		]]></help>
		<values />
	</parameter>
	<parameter name="proxyport" type="Numeric" required="false">
		<help><![CDATA[
			The port to use on The proxy server.
		]]></help>
		<values default="80" />
	</parameter>
	<parameter name="proxyuser" type="String" required="false">
		<help><![CDATA[
			The user ID to send to the proxy server.
		]]></help>
		<values />
	</parameter>
	<parameter name="proxypassword" type="String" required="false">
		<help><![CDATA[
			The user's password on the proxy server.
		]]></help>
		<values />
	</parameter>
	<parameter name="username" type="String" required="false">
		<help><![CDATA[
			A username. May be required by server.
		]]></help>
		<values />
	</parameter>
	<parameter name="password" type="String" required="false">
		<help><![CDATA[
			A password. May be required by server
		]]></help>
		<values />
	</parameter>
	<parameter name="useragent" type="String" required="false">
		<help><![CDATA[
			Text to put in the user agent request header. Used to
			identify the request client software. Can make the
			CFML application appear to be a browser.
		]]></help>
		<values default="ColdFusion" />
	</parameter>
	<parameter name="charset" type="String" required="false">
		<help><![CDATA[
			TThe character encoding of the request, including the URL
			query string and form or file data, and the response.

			For more information on character encodings, see:
			www.w3.org/International/O-charset.html.
		]]></help>
		<values>
			<value option="utf-8" />
			<value option="iso-8859-1" />
			<value option="windows-1252" />
			<value option="us-ascii" />
			<value option="shift_jis" />
			<value option="iso-2022-jp" />
			<value option="euc-jp" />
			<value option="euc-kr" />
			<value option="big5" />
			<value option="euc-cn" />
			<value option="utf-16" />
		</values>
	</parameter>
	<parameter name="resolveurl" type="boolean" required="false">
		<help><![CDATA[
			No does not resolve URLs in the response body. As a result,
				any relative URL links in the response body do not work.
			Yes resolves URLs in the response body to absolute URLs,
				including the port number, so that links in a retrieved
				page remain functional.
		]]></help>
		<values default="false">
			<value option="true" />
			<value option="false" />
		</values>
	</parameter>
	<parameter name="throwonerror" type="boolean" required="false">
		<help><![CDATA[
			Yes if the server returns an error response code, throws
				an exception that can be caught using the cftry and
				cfcatch or CFML error pages.
			No does not throw an exception if an error response is
				returned. In this case, your application can use the
				cfhttp.StatusCode variable to determine if there was
				an error and its cause.
		]]></help>
		<values default="false">
			<value option="true" />
			<value option="false" />
		</values>
	</parameter>
	<parameter name="redirect" type="boolean" required="false">
		<help><![CDATA[
			If the response header includes a Location field,
			determines whether to redirect execution to the URL
			specified in the field.
		]]></help>
		<values default="true">
			<value option="true" />
			<value option="false" />
		</values>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Value, in seconds of the maximum time the request can take.
			If the timeout passes without a response, CFML
			considers the request to have failed.
		]]></help>
		<values />
	</parameter>
	<parameter name="getasbinary" type="String" required="false">
		<help><![CDATA[
			* No If CFML does not recognize the response body
				type as text, convert it to a CFML object.
			* Auto If CFML does not recognize the response body
				type as text, convert it to CFML Binary type data.
			* Yes Always convert the response body content into
				CFML Binary type data, even if CFML
				recognizes the response body type as text.
		]]></help>
		<values default="auto">
			<value option="auto" />
			<value option="false" />
			<value option="true" />
		</values>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
			Sepcifies a character that separates quiery columns.
		]]></help>
		<values>
			<value option="," />
			<value option=";" />
			<value option="|" />
			<value option=":" />
		</values>
	</parameter>
	<parameter name="name" type="String" required="false"><!-- VariableName -->
		<help><![CDATA[
			Tells ColdFusion to create a query object with the given
			name from the returned HTTP response body.
		]]></help>
		<values />
		<triggers>
			<selectedValue attributeName="method" required="false" value="get" />
			<selectedValue attributeName="method" required="false" value="post" />
		</triggers>
	</parameter>
	<parameter name="columns" type="String" required="false">
		<help><![CDATA[
			The column names for the query, separated by commas, with no
			spaces. Column names must start with a letter. The remaining
			characters can be letters, numbers, or underscore
			characters (_).
			
			If there are no column name headers in the response,
			specify this attribute to identify the column names.
			
			If you specify this attribute, and the firstrowasHeader
			attribute is True (the default), the column names specified
			by this attribute replace the first line of the response.
			You can use this behavior to replace the column names
			retrieved by the request with your own names.
			
			If a duplicate column heading is encountered in either this
			attribute or in the column names from the response,
			ColdFusion appends an underscore to the name to make it
			unique.
			
			If the number of columns specified by this attribute does
			not equal the number of columns in the HTTP response body,
			ColdFusion generates an error.
		]]></help>
		<values />
		<triggers>
			<selectedValue attributeName="method" required="false" value="get" />
			<selectedValue attributeName="method" required="false" value="post" />
		</triggers>
	</parameter>
	<parameter name="firstrowasheaders" type="boolean" required="false">
		<help><![CDATA[
			Determines how ColdFusion processes the first row of the
			query record set:
			* yes: processes the first row as column heads. If you
			specify a columns attribute, ColdFusion ignores the
			first row of the file.
			* no: processes the first row as data. If you do not
			specify a columns attribute, ColdFusion generates column
			names by appending numbers to the word "column"; for
			example, "column_1".
		]]></help>
		<values default="true">
			<value option="true" />
			<value option="false" />
		</values>
		<triggers>
			<selectedValue attributeName="method" required="false" value="get" />
			<selectedValue attributeName="method" required="false" value="post" />
		</triggers>
	</parameter>
	<parameter name="delimiter" type="String" required="false">
		<help><![CDATA[
			A character that separates query columns. The response
			body must use this character to separate the query columns.
		]]></help>
		<values default=",">
			<value option="," />
			<value option=";" />
			<value option="|" />
			<value option=":" />
		</values>
		<triggers>
			<selectedValue attributeName="method" required="false" value="get" />
			<selectedValue attributeName="method" required="false" value="post" />
		</triggers>
	</parameter>
	<parameter name="textqualifier" type="String" required="false">
		<help><![CDATA[
			A character that, optionally, specifies the start and end
			of a text column. This character must surround any text
			fields in the response body that contain the delimiter
			character as part of the field value.
			
			To include this character in column text, escape it by
			using two characters in place of one. For example, if the
			qualifier is a double-quotation mark, escape it as "". 
		]]></help>
		<values default="&quot;">
			<value option="&quot;" />
			<value option="'" />
		</values>
		<triggers>
			<selectedValue attributeName="method" required="false" value="get" />
			<selectedValue attributeName="method" required="false" value="post" />
		</triggers>
	</parameter>
</tag>
