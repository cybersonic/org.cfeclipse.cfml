<?xml version="1.0" encoding="UTF-8"?>

<!--
	cfinput 
		type = "input_type"
		name = "name"
		value = "initial_value"
		required = "boolean"
		range = "min_value, max_value"
		validate = "data_type"
		onValidate = "javascript_function"
		pattern = "regexp"
		message = "validation_msg"
		onError = "text"
		size = "integer"
		maxLength = "integer"
		checked 
		passThrough = "HTML_attributes"
-->
<tag xmlns="http://www.cfeclipse.org/version1/dictionary"
	name="cfinput" single="true" xmlstyle="false">
	<help><![CDATA[
		Used within the cfform tag, to place radio buttons, check boxes,
		or text boxes on a form. Provides input validation for the
		specified control type.
	]]></help>
	<parameter name="name" type="String" required="true">
		<help><![CDATA[
			Name for form input element.
		]]></help>
		<values />
	</parameter>
	<parameter name="id" type="String" required="false">
		<help><![CDATA[
			ID for form input element.
		]]></help>
		<values />
	</parameter>
	<parameter name="type" type="String" required="false">
		<help><![CDATA[
			text: creates a text entry box control
			radio: creates a radio button control
			checkbox: creates a check box control
			password: creates a password entry control
		]]></help>
		<values default="text">
			<value option="text"/>
			<value option="radio"/>
			<value option="checkbox"/>
			<value option="password"/>
		</values>
	</parameter>
	<parameter name="style" type="String" required="false">
		<help><![CDATA[
			Style for form input element.
		]]></help>
		<values />
	</parameter>
	<parameter name="class" type="String" required="false">
		<help><![CDATA[
			Stylesheet class for form input element.
		]]></help>
		<values />
	</parameter>
	<parameter name="required" type="boolean" required="false">
		<help><![CDATA[
		]]></help>
		<values default="false">
			<value option="true" />
			<value option="false" />
		</values>
	</parameter>
	<parameter name="validate" type="String" required="false">
		<help><![CDATA[
			date: verifies format mm/dd/yy.
			eurodate: verifies date format dd/mm/yyyy.
			time: verifies time format hh:mm:ss.
			float: verifies floating point format.
			integer: verifies integer format.
			telephone: verifies telephone format ###-###-####. The
				separator can be a blank. Area code and exchange must
				begin with digit 1 - 9.
			zipcode: verifies, in U.S. formats only, 5- or 9-digit
				format #####-####. The separator can be a blank.
			creditcard: strips blanks and dashes; verifies number using
				mod10 algorithm. Number must have 13-16 digits.
			social_security_number: verifies format ###-##-####. The
				separator can be a blank.
			regular_expression: matches input against pattern
				attribute.
		]]></help>
		<values>
			<value option="date" />
			<value option="eurodate" />
			<value option="time" />
			<value option="float" />
			<value option="integer" />
			<value option="telephone" />
			<value option="zipcode" />
			<value option="creditcard" />
			<value option="social_security_number" />
			<value option="regular_expression" />
		</values>
	</parameter>
	<parameter name="message" type="String" required="false">
		<help><![CDATA[
			Message text to display if validation fails
		]]></help>
		<values />
	</parameter>
	<parameter name="range" type="String" required="false">
		<help><![CDATA[
			Minimum and maximum value range, separated by a comma. If
			type = "text" or "password", this applies only to numeric
			data.
		]]></help>
		<values />
	</parameter>
	<parameter name="maxlength" type="Numeric" required="false">
		<help><![CDATA[
			Maximum length of text entered, if type=text or password.
		]]></help>
		<values />
	</parameter>
	<parameter name="pattern" type="Regex" required="false">
		<help><![CDATA[
			JavaScript regular expression pattern to validate input.
			ColdFusion uses this attribute only if you specify regex
			in the validate attribute. Omit leading and trailing slashes.
		]]></help>
		<values />
	</parameter>
	<parameter name="onvalidate" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to validate user input. The form
			 object, input object, and input object values are passed
			 to the routine, which should return True if validation
			 succeeds, and False otherwise. If used, the validate
			 attribute is ignored.
		]]></help>
		<values />
	</parameter>
	<parameter name="onerror" type="String" required="false">
		<help><![CDATA[
			Custom JavaScript function to execute if validation fails.
		]]></help>
		<values />
	</parameter>
	<parameter name="size" type="Numeric" required="false">
		<help><![CDATA[
			Size of input control. Ignored, if type=radio or checkbox.
		]]></help>
		<values />
	</parameter>
	<parameter name="value" type="String" required="false">
		<help><![CDATA[
			Initial value for form input element.
		]]></help>
		<values />
	</parameter>
	<parameter name="checked" type="boolean" required="false">
		<help><![CDATA[
			Selects a control. No value is required. Applies if
			type=radio or checkbox.
			Default: false
		]]></help>
		<values default="false">
			<value option="true" />
			<value option="false" />
		</values>
	</parameter>
	<parameter name="passthrough" type="String" required="false">
		<help><![CDATA[
			Passes one or more arbitrary attribute-value pairs to the
			HTML code that is generated for the tag. You can use either
			of the following formats to include the quotation marks
			around the attribute value:

			passthrough="ID=""myID"""
			passthrough='ID="myID"'

			The second format, which surrounds all the attribute-value
			pairs to be passed through in single quotation marks is
			clearer, particularly when you pass multiple HTML
			attributes.
		]]></help>
		<values />
	</parameter>
</tag>
