<?xml version="1.0" encoding="UTF-8"?>

<!--
	cferror
		type = "a type"
		template = "template_path"
		mailTo = "email_address"
		exception = "exception_type"
-->
<tag xmlns="http://www.cfeclipse.org/version1/dictionary"
	name="cferror" single="true" xmlstyle="false">
	<help><![CDATA[
		Displays a custom HTML page when an error occurs. This lets
		you maintain a consistent look and feel among an application's
		functional and error pages
	]]></help>
	<parameter name="type" type="String" required="true">
		<help><![CDATA[
			Type of error that the custom error page handles. The type
			also determines how CFML handles the error page. For
			more information, see Specifying a custom error page in
			Developing CFML MX Applications.

			exception: a exception of the type specified by the
				exception attribute.
			validation: errors recognized by sever-side type
				validation.
			request: any encountered error.
			monitor: deprecated.
		]]></help>
		<values>
			<value option="exception" />
			<value option="validation" />
			<value option="request" />
			<value option="monitor" compatibility="deprecated" />
		</values>
	</parameter>
	<parameter name="template" type="String" required="true">
		<help><![CDATA[
			Relative path to the custom error page.
			(A CFML page was formerly called a template.)
		]]></help>
		<values />
	</parameter>
	<parameter name="mailto" type="String" required="false">
		<help><![CDATA[
			An E-mail address. This attribute is available on the
			error page as the variable error.mailto. CFML does
			not automatically send anything to this address.
		]]></help>
		<values />
	</parameter>
	<parameter name="exception" type="String" required="false">
		<help><![CDATA[
			Type of exception that the tag handles:

			application: application exceptions
			database: database exceptions
			template: CFML page exceptions
			security: security exceptions
			object: object exceptions
			missingInclude: missing include file exceptions
			expression: expression exceptions
			lock: lock exceptions
			custom_type: developer-defined exceptions, defined in the
				cfthrow tag
			any: all exception types
		]]></help>
		<values default="any">
			<value option="any" />
			<value option="application" />
			<value option="database" />
			<value option="template" />
			<value option="security" />
			<value option="object" />
			<value option="missinginclude" />
			<value option="expression" />
			<value option="lock" />
			<value option="custom_type" />
		</values>
	</parameter>
</tag>
