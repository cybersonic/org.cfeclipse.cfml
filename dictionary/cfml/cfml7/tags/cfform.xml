<?xml version="1.0" encoding="UTF-8"?>

<!--
	cfform
		name = "name"
		action = "form_action"
		method = "POST" or "GET"
		format = "HTML" or "Flash" or "XML"
		skin = "Flash or XSL skin"
		style = "style specification"
		preserveData = "boolean"
		onSubmit = "javascript"
		onReset = "javascript"
		scriptSrc = "path"
		codeBase = "URL"
		archive = "URL"
	The following attributes are supported in Flash and XML only
		width = "pixels or percent"
		height = "pixels or percent"
		The following attributes are supported in Flash only
		onError = "ActionScript code"
		wMode = "window", "transparent", or "opaque"
		accessible = "boolean"
		preloader = "boolean"
		timeout = "seconds"
	The following attributes are supported in HTML and XML only
		class = "form class"
		enctype = "Internet media type"
		id = "HTML id"
		class = "css class"
		style = "css style"
		onload = "load event script"
		onreset = "reset event script"
		target = "target window or frame"
	...
	/cfform
-->
<tag xmlns="http://www.cfeclipse.org/version1/dictionary"
	name="cfform" single="false" xmlstyle="false">
	<help><![CDATA[
		Builds a form with CFML custom control tags; these provide
		more functionality than standard HTML form input elements.
	]]></help>
	<parameter name="name" type="String" required="false">
		<help><![CDATA[
			In HTML format, if you omit this attribute and specify
			an id attribute, ColdFusion does not include a name
			attribute in the HTML sent to the browser; this
			behavior lets you use the cfform tag to create
			XHTML-compliant forms. If you omit the name
			attribute and the id attribute, ColdFusion generates
			a name of the form CFForm_n where n is a number
			that assigned serially to the forms on a page.
		]]></help>
		<values />
	</parameter>
	<parameter name="action" type="String" required="false">
		<help><![CDATA[
			Name of CFML page to execute when the form is
			submitted for processing.
		]]></help>
		<values />
	</parameter>
	<parameter name="method" type="String" required="false">
		<help><![CDATA[
			The method the browser uses to send the form data
			to the server:
			- post: Send the data using the HTTP post method,
			This method sends the data in a separate message
			to the server.
			- get: Send the data using the HTTP get method,
			which puts the form field contents in the URL
			query string.
		]]></help>
		<values default="post">
			<value option="post" />
			<value option="get" />
		</values>
	</parameter>
	<parameter name="format" type="String" required="false">
		<help><![CDATA[
			- HTML: Generate an HTML form and send it to the
			client. cfgrid and cftree child controls can be in
			Flash or applet format.
			- Flash: Generate a Flash form and send it to the
			client. All controls are in Flash format.
			- XML: Generate XForms-compliant XML and save
			the results in a variable specified by the name
			attribute. By default, ColdFusion also applies an
			XSL skin and displays the result. For more
			information, see the skin attribute
		]]></help>
		<values default="html">
			<value option="html" />
			<value option="flash" />
			<value option="xml" />
		</values>
	</parameter>
	<parameter name="skin" type="String" required="false">
		<help><![CDATA[
			Flash: Use a Macromedia halo color to stylize the output.
			XML: Specfies whether to apply an XSL skin and
			display the resulting HTML to the client. Can be any
			of the following:
			 - ColdFusion MX skin name: Apply the specified skin.
			 - XSL file name: Apply the skin located in the specified path.
			 - "none": Do not apply an XSL skin. You must use XForms XML then.
			 - (omitted) or "default": Use the ColdFusion MX default skin.
		]]></help>
		<values>
			<value option="-- Flash skins --" />
			<value option="haloSilver" />
			<value option="haloBlue" />
			<value option="haloGreen" />
			<value option="haloOrange" />
			<value option="-- CF skins --" />
			<value option="beige" />
			<value option="blue" />
			<value option="bluegray" />
			<value option="lightgray" />
			<value option="red" />
			<value option="silver" />
			<value option="-- XSLT skins --" />
			<value option="none" />
			<value option="default" />
			<value option="basic" />
			<value option="basiccss" />
			<value option="beige" />
			<value option="blue" />
			<value option="bluegray" />
			<value option="lightgray" />
			<value option="red" />
			<value option="silver" />
			<value option="skin.xsl" />
			<value option="/path/to.xsl" />
			<value option="http://path/to.xsl" />
		</values>
		<triggers>
			<selectedValue attributeName="format" value="flash" required="false" />
			<selectedValue attributeName="format" value="xml" required="false" />
		</triggers>
	</parameter>
	<parameter name="preservedata" type="boolean" required="false">
		<help><![CDATA[
			When the cfform action attribute posts back to the same
			page as the form, this determines whether to override the
			control values with the submitted values.
			 - false: values specified in the control tag attributes are used
			 - true: corresponding submitted values are used
		]]></help>
		<values default="false">
			<value option="true" />
			<value option="false" />
		</values>
		<triggers>
			<selectedValue attributeName="format" value="html" required="false" />
			<selectedValue attributeName="format" value="xml" required="false" />
		</triggers>
	</parameter>
	<parameter name="onload" type="String" required="false">
		<help><![CDATA[
			JavaScript to execute when the form loads.
		]]></help>
		<values />
		<triggers>
			<selectedValue attributeName="format" value="html" required="false" />
			<selectedValue attributeName="format" value="xml" required="false" />
		</triggers>
	</parameter>
	<parameter name="onsubmit" type="String" required="false">
		<help><![CDATA[
			JavaScript or Actionscript function to execute to
			preprocess data before form is submitted. If any
			child tags specify onSubmit field validation, ColdFusion
			does the validation before executing this JavaScript.
		]]></help>
		<values />
	</parameter>
	<parameter name="codebase" type="String" required="false">
		<help><![CDATA[
			URL of downloadable JRE plug-in (for Internet Explorer only).
			Default: /CFIDE/classes/cf-j2re-win.cab
		]]></help>
		<values default="/CFIDE/classes/cf-j2re-win.cab" />
		<triggers>
			<selectedValue attributeName="format" value="html" required="false" />
			<selectedValue attributeName="format" value="xml" required="false" />
		</triggers>
	</parameter>
	<parameter name="archive" type="String" required="false">
		<help><![CDATA[
			URL of downloadable Java classes for CFML controls.
			Default: /CFIDE/classes/cfapplets.jar
		]]></help>
		<values default="/CFIDE/classes/cfapplets.jar" />
		<triggers>
			<selectedValue attributeName="format" value="html" required="false" />
			<selectedValue attributeName="format" value="xml" required="false" />
		</triggers>
	</parameter>
	<parameter name="height" type="String" required="false">
		<help><![CDATA[
			The height of the form. Use a number to specify
			pixels, In Flash, you can use a percentage value to
			specify a percentage of the available width. The
			displayed height might be less than the specified size.
		]]></help>
		<values default="100%" />
		<triggers>
			<selectedValue attributeName="format" value="flash" required="false" />
			<selectedValue attributeName="format" value="xml" required="false" />
		</triggers>
	</parameter>
	<parameter name="width" type="String" required="false">
		<help><![CDATA[
			The width of the form. Use a number to specify
			pixels, In Flash, you can use a percentage value to
			specify a percentage of the available width.
		]]></help>
		<values default="100%" />
		<triggers>
			<selectedValue attributeName="format" value="flash" required="false" />
			<selectedValue attributeName="format" value="xml" required="false" />
		</triggers>
	</parameter>
	<parameter name="onerror" type="String" required="false">
		<help><![CDATA[
			Applies only for onSubmit or onBlur validation; has
			no effect for onServer validation. An ActionScript
			expression or expressions to execute if the user
			submits a form with one or more validation errors.
		]]></help>
		<values />
		<triggers>
			<selectedValue attributeName="format" value="flash" required="false" />
		</triggers>
	</parameter>
	<parameter name="wmode" type="String" required="false">
		<help><![CDATA[
			Specifies how the Flash form appears relative to
			other displayable content that occupies the same
			space on an HTML page.
			 - window: The Flash form is the topmost layer on the
			page and obscures anything that would share the
			space, such as drop-down dynamic HTML lists.
			 - transparent: The Flash form honors the z-index of
			dhtml so you can float items above it. If the Flash
			form is above any item, transparent regions in the
			form show the content that is below it.
			 - opaque: The Flash form honors the z-index of
			dhtml so you can float items above it. If the Flash
			form is above any item, it blocks any content that is
			below it.
			Default is: window.
		]]></help>
		<values default="window">
			<value option="window" />
			<value option="transparent" />
			<value option="opaque" />
		</values>
		<triggers>
			<selectedValue attributeName="format" value="flash" required="false" />
		</triggers>
	</parameter>
	<parameter name="accessible" type="boolean" required="false">
		<help><![CDATA[
			Specifies whether to include support screen readers
			in the Flash form. Screen reader support adds
			approximately 80KB to the SWF file sent to the
			client. Default is: false.
		]]></help>
		<values default="false">
			<value option="true" />
			<value option="false" />
		</values>
		<triggers>
			<selectedValue attributeName="format" value="flash" required="false" />
		</triggers>
	</parameter>
	<parameter name="preloader" type="boolean" required="false">
		<help><![CDATA[
			Specifies whether to display a progress bar when
			loading the Flash form. Default is: true.
		]]></help>
		<values default="true">
			<value option="true" />
			<value option="false" />
		</values>
		<triggers>
			<selectedValue attributeName="format" value="flash" required="false" />
		</triggers>
	</parameter>
	<parameter name="timeout" type="Numeric" required="false">
		<help><![CDATA[
			Integer number of seconds for which to keep the
			form data in the Flash cache on the server. A value of
			0 prevents the data from being cached.
		]]></help>
		<values />
		<triggers>
			<selectedValue attributeName="format" value="flash" required="false" />
		</triggers>
	</parameter>
	<parameter name="scriptsrc" type="String" required="false">
		<help><![CDATA[
			Specifies the URL, relative to the web root, of the
			directory that contains the cfform.js file with the
			client-side JavaScript used by this tag and its child
			tags. For XML format forms, this directory is also the
			default directory for XSLT skins.
		]]></help>
		<values />
	</parameter>
	<parameter name="style" type="String" required="false">
		<help><![CDATA[
			Styles to apply to the form. In HTML or XML format,
			ColdFusion passes the style attribute to the browser
			or XML. In Flash format, must be a style specification
			in CSS format.
		]]></help>
		<values />
	</parameter>
	<parameter name="onreset" type="String" required="false">
		<help><![CDATA[
			JavaScript to execute when the user clicks a reset button.
		]]></help>
		<values />
		<triggers>
			<selectedValue attributeName="format" value="html" required="false" />
			<selectedValue attributeName="format" value="xml" required="false" />
		</triggers>
	</parameter>
	<parameter name="enctype" type="String" required="false">
		<help><![CDATA[
			MIME type passed through to <FORM>.
		]]></help>
		<values default="application/x-www-form-urlencoded">
			<value option="application/x-www-form-urlencoded" />
			<value option="multipart/form-data" />
			<value option="text/plain" />
		</values>
	</parameter>
	<parameter name="id" type="String" required="false">
		<help><![CDATA[
			HTML id passed through to <FORM>.
		]]></help>
		<values />
	</parameter>
	<parameter name="target" type="String" required="false">
		<help><![CDATA[
			Target window or frame passed through to <FORM>.
		]]></help>
		<values />
	</parameter>
	<parameter name="class" type="String" required="false">
		<help><![CDATA[
			Form CSS class passed through to <FORM>.
		]]></help>
		<values />
	</parameter>
	<parameter name="passthrough" type="String" required="false" compatibility="deprecated">
		<help><![CDATA[
			This attribute is deprecated.
			
			Passes arbitrary attribute-value pairs to the HTML code
			that is generated for the tag. You can use either of the
			following formats:
			
			passthrough="title=""myTitle"""
			passthrough='title="mytitle"'
		]]></help>
		<values />
	</parameter>
	<parameter name="enablecab" type="String" required="false" compatibility="deprecated">
		<help><![CDATA[
			This attribute is deprecated.
		]]></help>
		<values />
	</parameter>
</tag>
